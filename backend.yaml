- name: configuring backend server
  hosts: backend
  become: yes
  tasks:
  - name: disabling nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enabling nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: installing nodejs
    ansible.builtin.package:
      name: nodejs
      state: present 
  
  - name: adding user
    ansible.builtin.user:
      name: expense
      
  - name: Ensure directory exists
    ansible.builtin.file:
      path: /opt/mydirectory
      state: directory 
  
  - name: Create /app directory
    ansible.builtin.file:
      path: /app
      state: directory 
  
  - name: Download a backend.service
    ansible.builtin.get_url:
      url: "https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip"
      dest: "/tmp/backend.zip"
  
  - name: Extract ZIP file
    ansible.builtin.unarchive:
      src: /tmp/backend.zip  # Path to the ZIP file
      dest: /app        # Destination directory
      remote_src: yes 
  
  - name: installing dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  
  - name: copy backend.service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: Import schema into MySQL
    community.mysql.mysql_db:
    login_user: root
    login_host: "{{ login_host }}"
    login_password: "{{ login_password }}"
    target: /app/schema/backend.sql  # Path to your schema file
    name: all
    state: import

- name: Run systemctl daemon-reload
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon_reload: yes